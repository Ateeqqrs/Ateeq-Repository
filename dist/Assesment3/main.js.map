{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addcustomer/addcustomer.component.html","webpack:///./src/app/addcustomer/addcustomer.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/customerservice.service.ts","webpack:///./src/app/listcustomer/listcustomer.component.html","webpack:///./src/app/listcustomer/listcustomer.component.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/styles.css","webpack:///./src/app/shared.service.ts","webpack:///./src/app/updatecustomer/updatecustomer.component.html","webpack:///./src/app/updatecustomer/updatecustomer.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 m-auto\\\">\\n    <form [formGroup]=\\\"addForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"eid\\\">Customer Number</label>\\n        <input type=\\\"text\\\" id=\\\"eid\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.CustomerNumber\\\" formControlName=\\\"CustomerNumber\\\" name=\\\"CustomerNumber\\\"\\n          placeholder=\\\"Customer Number\\\">\\n        <div *ngIf=\\\"f.CustomerNumber.invalid && (f.CustomerNumber.dirty || f.CustomerNumber.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.CustomerNumber.errors.required\\\">\\n            Customer Number is required.\\n          </div>\\n          <div *ngIf=\\\"f.id.errors.pattern\\\">\\n            Invalid Customer Number.\\n          </div>\\n          <div *ngIf=\\\"f.id.errors.maxlength\\\">\\n            Not more than 2 chars.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Customer Name</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.CustomerName\\\" formControlName=\\\"CustomerName\\\"\\n          name=\\\"CustomerName\\\" placeholder=\\\"Customer Name\\\" [ngClass]=\\\"{ 'has-error': submitted && f.CustomerName.errors }\\\">\\n        <div *ngIf=\\\"f.CustomerName.invalid && (f.CustomerName.dirty || f.CustomerName.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.CustomerName.errors.required\\\">\\n            Customer Name is required.\\n          </div>\\n          <div *ngIf=\\\"f.CustomerName.errors.pattern\\\">\\n            Invalid Customer.\\n          </div>\\n          <div *ngIf=\\\"f.CustomerName.errors.minlength\\\">\\n            Minimum 4 chars required.\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"dob\\\">Customer DOB</label>\\n        <input type=\\\"date\\\" [max]=\\\"minDate\\\" id=\\\"dob\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.DateOfBirth\\\"\\n          formControlName=\\\"DateOfBirth\\\" name=\\\"DateOfBirth\\\" placeholder=\\\"Date Of Birth\\\">\\n        <div *ngIf=\\\"f.DateOfBirth.invalid && (f.DateOfBirth.dirty || f.DateOfBirth.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.DateOfBirth.errors.required\\\">\\n            DOB is required.\\n          </div>\\n          <div *ngIf=\\\"f.DateOfBirth.errors.pattern\\\">\\n            Invalid Charactors.\\n          </div>\\n        </div>\\n      </div>\\n    \\n      \\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exp\\\">Gender</label>\\n        <select class=\\\"form-control\\\" id=\\\"exp\\\" [(ngModel)]=\\\"data.Gender\\\" formControlName=\\\"Gender\\\"\\n          name=\\\"Gender\\\">\\n          <option>Male</option>\\n          <option>Femal</option>\\n        </select>\\n        <div *ngIf=\\\"f.Gender.invalid && (f.Gender.dirty || f.Gender.touched)\\\"\\n          class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.Gender.errors.required\\\">\\n            Gender is required.\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <button (click)=\\\"addCustomer('success', 'successfully added.')\\\"\\n        class=\\\"btn mt-4 btn-outline-success btn-sm\\\">Save</button>\\n      <button class=\\\"btn btn-outline-danger btn-sm mt-4 ml-2\\\" data-dismiss=\\\"modal\\\">Close</button>\\n    </form>\\n  </div>\\n</div>\\n<notifier-container></notifier-container>\\n  \"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { CustomerService } from '../customerservice.service';\nimport { Router } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-emp-form',\n  templateUrl: './addcustomer.component.html',\n  styles: []\n})\nexport class EmpFormComponent implements OnInit {\n  @Output() emitData = new EventEmitter();\n\n  maxDate = new Date().toJSON().split('T')[0];\n  minDate = new Date('2000-12-30').toJSON().split('T')[0];\n\n  data = {};\n  submitted = false;\n  addForm: FormGroup;\n\n  constructor(private location: Location, private fb: FormBuilder,\n              private customerService: CustomerService, private router: Router,\n              public notifier: NotifierService) {\n    this.addForm = this.fb.group({\n      CustomerNumber: ['', [Validators.required, Validators.pattern('[0-9]*'), Validators.maxLength(2)]],\n      CustomerName: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(4)]],\n      DateOfBirth: ['', [Validators.required, Validators.pattern('[0-9]{4}-[0-9]{2}-[0-9]{2}')]],\n      Gender: ['', [Validators.required]],\n    });\n  }\n  ngOnInit() {\n  }\n  get f() { return this.addForm.controls; }\n\n  addCustomer(type: string, message: string): void {\n    debugger;\n    this.submitted = true;\n    //if (this.addForm.invalid == false) {\n    // return;\n    //}\n    this.customerService.addCustomer(this.data);\n\n    this.notifier.notify(type, message);\n    this.emitData.emit(this.submitted);\n    this.router.navigate(['/customerlist'])\n          .then(() => {\n            window.location.reload();\n          });\n    \n  }\n\n  \n  back() {\n    this.location.back();\n  }\n}\n","import { AuthGuard } from './auth/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerListComponent } from './listcustomer/listcustomer.component';\nimport { EmpFormComponent } from './addcustomer/addcustomer.component';\nimport { UpdateCustomerComponent } from './updatecustomer/updatecustomer.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent, pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'customerlist', component: CustomerListComponent,canActivate:[AuthGuard] },\n  { path: 'update/:id', component: UpdateCustomerComponent,canActivate:[AuthGuard] },\n  { path: 'emp-form', component: EmpFormComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-info mb-4\\\">\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\" style=\\\"width: 100%;\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/customerlist\\\">Customer List</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" style=\\\"width: 85%;\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\">Add New Customer</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n      <button class=\\\"btn btn-danger my-2 my-sm-0\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"addModal\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header bg-info\\\">\\n        <h5 class=\\\"modal-title\\\">Add Customer</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" #closeBtn>\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <app-emp-form (emitData)=\\\"closeModal($event,closeBtn)\\\"></app-emp-form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SharedService } from './shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n  //styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild('closeBtn') closeBtn: ElementRef;\n  title = 'Assesment3';\n  res;\n\n  closeModal() {\n    this.closeBtn.nativeElement.click();\n  }\n\n  constructor(private router: Router,private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.sharedService.data$\n      .subscribe(res => {       \n        this.res = res;\n      });\n  }\n\n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmpFormComponent } from './addcustomer/addcustomer.component';\nimport { CustomerListComponent } from './listcustomer/listcustomer.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UpdateCustomerComponent } from './updatecustomer/updatecustomer.component';\nimport { LoginComponent } from './login/login.component';\nimport { ModalModule } from 'ngb-modal'; \nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { CustomerService } from './customerservice.service';\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { LoginService } from './login.service';\n\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n    horizontal: {\n      position: 'left',\n      distance: 12\n    },\n    vertical: {\n      position: 'bottom',\n      distance: 12,\n      gap: 10\n    }\n  },\n  theme: 'material',\n  behaviour: {\n    autoHide: 5000,\n    onClick: 'hide',\n    onMouseover: 'pauseAutoHide',\n    showDismissButton: true,\n    stacking: 4\n  },\n  animations: {\n    enabled: true,\n    show: {\n      preset: 'slide',\n      speed: 300,\n      easing: 'ease'\n    },\n    hide: {\n      preset: 'fade',\n      speed: 300,\n      easing: 'ease',\n      offset: 50\n    },\n    shift: {\n      speed: 300,\n      easing: 'ease'\n    },\n    overlap: 150\n  }\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmpFormComponent,\n    CustomerListComponent,\n    UpdateCustomerComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatExpansionModule,\n    BrowserAnimationsModule,\n    NotifierModule.withConfig(customNotifierOptions),\n    ModalModule,\n    NgbModule\n  ],\n  providers: [LoginService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(private router: Router) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('token') != null)\n      return true;\n    else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private router: Router) {\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (localStorage.getItem('token') != null) {\n            const clonedReq = req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n            });\n            return next.handle(clonedReq).pipe(\n                tap(\n                    succ => { },\n                    err => {\n                        if (err.status == 401){\n                            localStorage.removeItem('token');\n                            this.router.navigateByUrl('/login');\n                        }\n                    }\n                )\n            )\n        }\n        else\n            return next.handle(req.clone());\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Customer } from './customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  constructor(private http: HttpClient) { }\n  ApiURL = 'http://localhost:54277/api';\n  editData = {};\n\n  f_data = [{\n    'id': 1,\n    'emp_name': 'Leanne Graham',\n    'emp_join_date': '2016-08-12',\n    'emp_adr': 'Howemouth',\n    'emp_experience': '2 Year',\n    'emp_salary': 82800,\n    'emp_age': 28,\n    'emp_email': 'julianneonner@kory.org',\n    'emp_dob': '1980-02-12'\n  },\n  {\n    'id': 2,\n    'emp_name': 'Clementine Bauch',\n    'emp_join_date': '2016-03-12',\n    'emp_adr': 'South Christy',\n    'emp_experience': '6 Year',\n    'emp_salary': 32500,\n    'emp_age': 29,\n    'emp_email': 'reypadberg@karina.biz',\n    'emp_dob': '1980-10-12'\n  },\n  {\n    'id': 3,\n    'emp_name': 'Leanne Graham',\n    'emp_join_date': '2011-08-12',\n    'emp_adr': 'Roscoeview',\n    'emp_experience': '8 Year',\n    'emp_salary': 42555,\n    'emp_age': 28,\n    'emp_email': 'chaimermott@dana.io',\n    'emp_dob': '1980-08-12'\n  },\n  {\n    'id': 4,\n    'emp_name': 'clementinaduBuque',\n    'emp_join_date': '2017-08-11',\n    'emp_adr': 'South Elvis',\n    'emp_experience': '2 Year',\n    'emp_salary': 82800,\n    'emp_age': 58,\n    'emp_email': 'julianneoconner@kory.org',\n    'emp_dob': '1980-02-12'\n  },\n  {\n    'id': 5,\n    'emp_name': 'Bauch',\n    'emp_join_date': '2015-05-12',\n    'emp_adr': 'McKenziehaven',\n    'emp_experience': '4 Year',\n    'emp_salary': 32500,\n    'emp_age': 39,\n    'emp_email': 'reypadberg@karina.biz',\n    'emp_dob': '1980-10-12'\n  },\n  {\n    'id': 6,\n    'emp_name': 'Graham',\n    'emp_join_date': '2018-08-12',\n    'emp_adr': 'Wisokyburgh',\n    'emp_experience': '6 Year',\n    'emp_salary': 42555,\n    'emp_age': 48,\n    'emp_email': 'chaimmcdermott@dana.io',\n    'emp_dob': '1980-08-12'\n  }];\n\n  addCustomer(data: any) {\n    //this.f_data.push(data);\n    debugger;\n    return this.http.post(this.ApiURL + '/Customer/AddCustomer', data).subscribe((result) => {\n      // This code will be executed when the HTTP call returns successfully \n     });\n\n\n  }\n  deleteCustomer(customerId: number) {\n    debugger;\n    return this.http.delete<Customer[]>(this.ApiURL + '/Customer/DeleteCustomer?customerId=' + customerId);\n  }\n  getCustomers() {\n    return this.http.get<Customer[]>(this.ApiURL + '/Customer/GetCustomers');\n  }\n  getCustomerByID(customerId: number) {\n    return this.http.get<Customer>(this.ApiURL + '/Customer/GetCustomerById?customerId=' + customerId);\n  }\n  updateCustomer(customer: Customer) {\n    debugger;\n    return this.http.put(this.ApiURL + '/Customer/UpdateCustomer' ,  customer).subscribe((result) => {\n      // This code will be executed when the HTTP call returns successfully \n     });\n;\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row border\\\">\\n    <div class=\\\"container bg-info\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 md-3-padd\\\">Customer Number</div>\\n        <div class=\\\"col-md-3 md-3-paddE\\\">Name</div>\\n        <div class=\\\"col-md-1 md-3-paddD\\\">DateOfBirth</div>\\n        <div class=\\\"col-md-2 md-3-paddS\\\">Gender</div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 border\\\" *ngFor=\\\"let customer of customers, let i = index;\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            <div class=\\\"col-md-3\\\">{{customer.customerNumber}}</div>\\n            <div class=\\\"col-md-3\\\">{{customer.customerName}}</div>\\n            <div class=\\\"col-md-2\\\">{{customer.dateOfBirth | date}}</div>\\n            <div class=\\\"col-md-2\\\">{{customer.gender}}</div>\\n          </mat-panel-title>\\n        </mat-expansion-panel-header>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <ul>\\n              <li><strong>CustomerId:</strong> {{customer.customerId}}</li>\\n              <li><strong>CustomerNumber:</strong> {{customer.customerNumber | date}}</li>\\n              <li><strong>CustomerName:</strong> {{customer.customerName}}</li>\\n              <li><strong>DateOfBirth:</strong> {{customer.dateOfBirth  | date}}</li>\\n              <li><strong>Gender:</strong> {{customer.gender}}</li>\\n            </ul>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <button (click)=\\\"editCustomer(customer)\\\" class=\\\"btn btn-sm btn-outline-primary mr-2\\\">\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n            <button (click)=\\\"deleteCustomer(customer)\\\" class=\\\"btn btn-sm btn-outline-danger\\\">\\n              <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </mat-expansion-panel>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../customer';\nimport { CustomerService } from '../customerservice.service';\nimport { Router } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './listcustomer.component.html',\n  styles: []\n})\nexport class CustomerListComponent implements OnInit {\n  empdata = true;\n  customers: Customer[];\n\n  constructor(private customerService: CustomerService, private router: Router, private notifier: NotifierService) { }\n\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe((result) => {\n      // This code will be executed when the HTTP call returns successfully\n      this.customers = result; \n     });\n    //this.customers = this.customerService.f_data;\n  }\n\n  deleteCustomer(customer) {\n    if (confirm('Are you sure?')) {\n      // const index = this.customers.indexOf(i);\n      // this.customers.splice(index, 1);\n      debugger;\n      this.customerService.deleteCustomer(customer.customerId).subscribe((result) => {\n        // This code will be executed when the HTTP call returns successfully\n        this.router.navigate(['/customerlist'])\n          .then(() => {\n            window.location.reload();\n          });\n\n       });\n    \n    }\n  }\n\n  editCustomer(editData) {\n    debugger;\n    this.customerService.editData = editData;\n    this.router.navigate(['/update', editData.customerId]);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  isLoggedIn = false;\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n  readonly BaseURI = 'http://localhost:54277/api';\n\n  formModel = this.fb.group({\n    UserName: ['', Validators.required],\n    Email: ['', Validators.email],\n    FullName: [''],\n    Passwords: this.fb.group({\n      Password: ['', [Validators.required, Validators.minLength(4)]],\n      ConfirmPassword: ['', Validators.required]\n    }, { validator: this.comparePasswords })\n\n  });\n\n  comparePasswords(fb: FormGroup) {\n    let confirmPswrdCtrl = fb.get('ConfirmPassword');\n    //passwordMismatch\n    //confirmPswrdCtrl.errors={passwordMismatch:true}\n    if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\n      if (fb.get('Password').value != confirmPswrdCtrl.value)\n        confirmPswrdCtrl.setErrors({ passwordMismatch: true });\n      else\n        confirmPswrdCtrl.setErrors(null);\n    }\n  }\n\n  register() {\n    var body = {\n      UserName: this.formModel.value.UserName,\n      Email: this.formModel.value.Email,\n      FullName: this.formModel.value.FullName,\n      Password: this.formModel.value.Passwords.Password\n    };\n    return this.http.post(this.BaseURI + '/ApplicationUser/Register', body);\n  }\n\n  login(formData) {\n    return this.http.post(this.BaseURI + '/ApplicationUser/Login', formData);\n  } \n\n \n\n \n}\n","module.exports = \"<body style=\\\"background-color: skyblue!important;\\\">\\n<img src=\\\"/assets/img/single_user.png\\\" class=\\\"mx-auto d-block\\\">\\n<form [formGroup]=\\\"myForm\\\" class=\\\"mb-4\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(myForm)\\\" >\\n  \\n  <br>\\n  <div class=\\\"form-group\\\">\\n    <label style=\\\"width: 15%;display: flex; justify-self: center;\\\">Username</label>\\n    <input style=\\\"width: 15%;display: flex; justify-self: center;\\\" class=\\\"form-control\\\" formControlName=\\\"UserName\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label style=\\\"width: 15%;display: flex; justify-self: center;\\\">Password</label>\\n    <input style=\\\"width: 15%;display: flex; justify-self: center;\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\" required>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n      <button style=\\\"width: 20%;display: flex; justify-self: center;padding-left:75px \\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\">Login</button>\\n    </div>\\n  </div>\\n</form>\\n\\n</body>\"","//import { ToastrService } from 'ngx-toastr';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from '../login.service';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./styles.css']\n})\nexport class LoginComponent implements OnInit {\n  myForm: FormGroup;\n\n  constructor(private fb: FormBuilder,private loginService: LoginService, \n    private router: Router,\n    private sharedService: SharedService\n    //, private toastr: ToastrService\n  ) \n  {\n    this.myForm = this.fb.group({\n      UserName: ['', Validators.required],\n      Password: ['', [Validators.required]]\n    });\n  }\n\n  changeData() {\n    this.sharedService.setData(true);\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null)\n      this.router.navigateByUrl('/customerlist');\n  }\n\n  onSubmit() {\n    this.loginService.login(this.myForm.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.token);\n        this.changeData();//means user has logged in\n        this.router.navigateByUrl('/customerlist');\n      },\n      err => {\n        if (err.status == 400)\n          //this.toastr.error('Incorrect username or password.', 'Authentication failed.');\n        alert('Incorrect username or password.');\n        else\n          console.log(err);\n      }\n    );\n  }\n}\n","module.exports = \"/* You can add global styles to this file, and also import other style files */\\nbody{\\n    background-color: #04c582;;\\n}\\ninput.form-control,input.form-control:focus{\\n    background-color: #636b7b;\\n    color: #fff;\\n    border: 1px solid #636b7b;\\n\\n}\\ninput.form-control:focus{\\n    box-shadow: none;\\n}\\nbutton[type=submit].btn{\\n    border-radius: 20px;\\n    background-color: #04c582;\\n    color: #fff;\\n}\\ndiv.form-group label:not(.text-danger){\\n    color: #545d6a;\\n    font-weight: 700;\\n}\\ndiv.form-group.required>label:first-child:after{\\n    content:'*';\\n    color: #fff;\\n    padding-left: 5px;\\n}\\n#toast-container > div {\\n    opacity:1;\\n}\\n.wrapper {\\n    display: flex;\\n    align-items: center;\\n    flex-direction: column; \\n    justify-content: center;\\n    width: 100%;\\n    padding: 20px;\\n  }\\n.wrapped-div {\\n    border-radius: 10px 10px 10px 10px;\\n    background: #2e3137;\\n    padding: 30px;\\n    width: 90%;\\n    max-width: 450px;\\n    position: relative;\\n    padding: 0px;\\n    box-shadow: 0 30px 60px 0 rgba(0,0,0,0.3);\\n  }\\n/* Tabs */\\n.tab-header{\\n    text-align: center;\\n}\\n.tab-header h2.active {\\n    color: #fff;\\n    border-bottom: 4px solid #fff;\\n  }\\n.tab-header h2 {\\n    text-align: center;\\n    font-size: 18px;\\n    font-weight: 600;\\n    display:inline-block;\\n    padding: 30px 40px 10px 40px;\\n    cursor: pointer;\\n    color: #545d6a;\\n    border-bottom: 2px solid #545d6a;\\n  }\\n.tab-header h2:focus {\\n      outline: none;\\n  }\\nform{\\n      margin: 0px 16px;\\n  }\\ndiv.form-group input.invalid{\\n    border: 1px solid #dc3545; \\n }\\ndiv.form-group label:first-child{\\n    text-transform: uppercase;\\n    font-size: 0.9rem;\\n }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vc3R5bGVzLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4RUFBOEU7QUFDOUU7SUFDSSx5QkFBeUI7QUFDN0I7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gseUJBQXlCOztBQUU3QjtBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLFdBQVc7QUFDZjtBQUVBO0lBQ0ksY0FBYztJQUNkLGdCQUFnQjtBQUNwQjtBQUVBO0lBQ0ksV0FBVztJQUNYLFdBQVc7SUFDWCxpQkFBaUI7QUFDckI7QUFFQTtJQUNJLFNBQVM7QUFDYjtBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLFdBQVc7SUFDWCxhQUFhO0VBQ2Y7QUFFQTtJQUVFLGtDQUFrQztJQUNsQyxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFFWix5Q0FBeUM7RUFDM0M7QUFFQSxTQUFTO0FBQ1g7SUFDSSxrQkFBa0I7QUFDdEI7QUFFRTtJQUNFLFdBQVc7SUFDWCw2QkFBNkI7RUFDL0I7QUFFQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQiw0QkFBNEI7SUFDNUIsZUFBZTtJQUNmLGNBQWM7SUFDZCxnQ0FBZ0M7RUFDbEM7QUFFQTtNQUNJLGFBQWE7RUFDakI7QUFFQTtNQUNJLGdCQUFnQjtFQUNwQjtBQUVEO0lBQ0cseUJBQXlCO0NBQzVCO0FBQ0E7SUFDRyx5QkFBeUI7SUFDekIsaUJBQWlCO0NBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vc3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFlvdSBjYW4gYWRkIGdsb2JhbCBzdHlsZXMgdG8gdGhpcyBmaWxlLCBhbmQgYWxzbyBpbXBvcnQgb3RoZXIgc3R5bGUgZmlsZXMgKi9cbmJvZHl7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA0YzU4Mjs7XG59XG5cbmlucHV0LmZvcm0tY29udHJvbCxpbnB1dC5mb3JtLWNvbnRyb2w6Zm9jdXN7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzYzNmI3YjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNjM2YjdiO1xuXG59XG5cbmlucHV0LmZvcm0tY29udHJvbDpmb2N1c3tcbiAgICBib3gtc2hhZG93OiBub25lO1xufVxuXG5idXR0b25bdHlwZT1zdWJtaXRdLmJ0bntcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwNGM1ODI7XG4gICAgY29sb3I6ICNmZmY7XG59XG5cbmRpdi5mb3JtLWdyb3VwIGxhYmVsOm5vdCgudGV4dC1kYW5nZXIpe1xuICAgIGNvbG9yOiAjNTQ1ZDZhO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmRpdi5mb3JtLWdyb3VwLnJlcXVpcmVkPmxhYmVsOmZpcnN0LWNoaWxkOmFmdGVye1xuICAgIGNvbnRlbnQ6JyonO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHBhZGRpbmctbGVmdDogNXB4O1xufVxuXG4jdG9hc3QtY29udGFpbmVyID4gZGl2IHtcbiAgICBvcGFjaXR5OjE7XG59XG5cbi53cmFwcGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxuXG4gIC53cmFwcGVkLWRpdiB7XG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxMHB4IDEwcHggMTBweCAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHggMTBweCAxMHB4IDEwcHg7XG4gICAgYmFja2dyb3VuZDogIzJlMzEzNztcbiAgICBwYWRkaW5nOiAzMHB4O1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMHB4O1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAzMHB4IDYwcHggMCByZ2JhKDAsMCwwLDAuMyk7XG4gICAgYm94LXNoYWRvdzogMCAzMHB4IDYwcHggMCByZ2JhKDAsMCwwLDAuMyk7XG4gIH1cblxuICAvKiBUYWJzICovXG4udGFiLWhlYWRlcntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiAgLnRhYi1oZWFkZXIgaDIuYWN0aXZlIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBib3JkZXItYm90dG9tOiA0cHggc29saWQgI2ZmZjtcbiAgfVxuXG4gIC50YWItaGVhZGVyIGgyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMzBweCA0MHB4IDEwcHggNDBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgY29sb3I6ICM1NDVkNmE7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM1NDVkNmE7XG4gIH1cblxuICAudGFiLWhlYWRlciBoMjpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICB9XG5cbiAgZm9ybXtcbiAgICAgIG1hcmdpbjogMHB4IDE2cHg7XG4gIH1cblxuIGRpdi5mb3JtLWdyb3VwIGlucHV0LmludmFsaWR7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RjMzU0NTsgXG4gfVxuIGRpdi5mb3JtLWdyb3VwIGxhYmVsOmZpcnN0LWNoaWxke1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gfVxuIl19 */\"","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SharedService {\r\n\r\n  private data: BehaviorSubject<any> = new BehaviorSubject<boolean>(true);\r\n  data$: Observable<any> = this.data.asObservable();\r\n  private userId;\r\n\r\n  constructor() { }\r\n\r\n  setData(newData) {\r\n    this.data.next(newData);\r\n  }\r\n\r\n  set userToEdit(userId) {\r\n    this.userId = userId;\r\n  }\r\n\r\n  get userToEdit() {\r\n    return this.userId;\r\n  }\r\n\r\n}","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-8 m-auto\\\">\\n    <h2 class=\\\"text-center\\\">Update Customer</h2>\\n    <form [formGroup]=\\\"updateForm\\\">\\n\\n      <!-- <div class=\\\"form-group\\\">\\n        <label for=\\\"eid\\\">Customer ID</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"CustomerId\\\" \\n          placeholder=\\\"Customer ID\\\" readonly>\\n        <div *ngIf=\\\"f.CustomerId.invalid && (f.CustomerId.dirty || f.CustomerId.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.CustomerId.errors.required\\\">\\n            ID is required.\\n          </div>\\n          <div *ngIf=\\\"f.CustomerId.errors.pattern\\\">\\n            Invalid ID.\\n          </div>\\n          <div *ngIf=\\\"f.CustomerId.errors.maxlength\\\">\\n            Not more than 2 chars.\\n          </div>\\n        </div>\\n      </div> -->\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"eid\\\">Customer Number</label>\\n\\n        \\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CustomerNumber\\\">\\n        <div *ngIf=\\\"f.CustomerNumber.invalid && (f.CustomerNumber.dirty || f.CustomerNumber.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.CustomerNumber.errors.required\\\">\\n            ID is required.\\n          </div>\\n          <div *ngIf=\\\"f.CustomerNumber.errors.pattern\\\">\\n            Invalid ID.\\n          </div>\\n          <div *ngIf=\\\"f.CustomerNumber.errors.maxlength\\\">\\n            Not more than 2 chars.\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Customer Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CustomerName\\\"\\n          name=\\\"CustomerName\\\" placeholder=\\\"Customer Name\\\" [ngClass]=\\\"{ 'has-error': submitted && f.CustomerName.errors }\\\">\\n        <div *ngIf=\\\"f.CustomerName.invalid && (f.CustomerName.dirty || f.CustomerName.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.CustomerName.errors.required\\\">\\n            Name is required.\\n          </div>\\n          <div *ngIf=\\\"f.CustomerName.errors.pattern\\\">\\n            Invalid Name.\\n          </div>\\n          <div *ngIf=\\\"f.CustomerName.errors.minlength\\\">\\n            Minimum 4 chars required.\\n          </div>\\n        </div>\\n      </div>\\n\\n      \\n   \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"dob\\\">DateOfBirth</label>\\n        <input type=\\\"date\\\" [max]=\\\"minDate\\\" class=\\\"form-control\\\" formControlName=\\\"DateOfBirth\\\">\\n        <div *ngIf=\\\"f.DateOfBirth.invalid && (f.DateOfBirth.dirty || f.DateOfBirth.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.DateOfBirth.errors.required\\\">\\n            DOB is required.\\n          </div>\\n          <div *ngIf=\\\"f.DateOfBirth.errors.pattern\\\">\\n            Invalid Charactors.\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n   \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exp\\\">Gender</label>\\n        <input class=\\\"form-control\\\" formControlName=\\\"Gender\\\" name=\\\"Gender\\\">\\n                   \\n        \\n        <div *ngIf=\\\"f.Gender.invalid && (f.Gender.dirty || f.Gender.touched)\\\"\\n          class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"f.Gender.errors.required\\\">\\n            Gender is required.\\n          </div>\\n        </div>\\n      </div> \\n\\n      <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"CustomerId\\\" name=\\\"CustomerId\\\">\\n      \\n      <div class=\\\"mb-4 mt-0\\\">\\n        <button [disabled]=\\\"updateForm.invalid\\\" (click)=\\\"updateEmp()\\\"\\n          class=\\\"btn mt-4 btn-outline-success btn-sm\\\">Update</button>\\n        <button class=\\\"btn btn-outline-warning btn-sm mt-4 ml-2\\\" (click)=\\\"back()\\\">Go Back</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomerService } from '../customerservice.service';\nimport { Router } from '@angular/router';\nimport { Location, getLocaleDateFormat } from '@angular/common';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-update-emp',\n  templateUrl: './updatecustomer.component.html',\n  styles: [],\n  providers: [DatePipe]\n})\nexport class UpdateCustomerComponent implements OnInit {\n  maxDate = new Date().toJSON().split('T')[0];\n  minDate = new Date('2000-01-01').toJSON().split('T')[0];\n  customer = {};\n  updateForm: FormGroup;\n  myDate = new Date();\n\n  constructor(private location: Location, private fb: FormBuilder, \n    private datePipe: DatePipe,\n    private customerService: CustomerService, \n    private router: Router) {\n    \n  }\n  get validControl() { return this.updateForm.controls; }\n  get f() { return this.updateForm.controls; }\n  ngOnInit() {\n    this.updateForm = this.fb.group({\n      CustomerId: ['', [Validators.required, Validators.pattern('[0-9]*'), Validators.maxLength(10)]],\n      CustomerNumber: ['', [Validators.required, Validators.pattern('[0-9]*'), Validators.maxLength(10)]],\n      CustomerName: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(4)]],\n      DateOfBirth: ['', [Validators.required, Validators.pattern('[0-9]{4}-[0-9]{2}-[0-9]{2}')]],\n      Gender: ['', [Validators.required]],\n    });\n    debugger;\n    //this.f_data = this.customerService.editData;\n    var customerId = parseInt(this.router.url.split('/')[2]);\n    this.customerService.getCustomerByID(customerId).subscribe((result) => {\n      // This code will be executed when the HTTP call returns successfully\n      //this.customers = result; \n      //console.log(result);\n      //this.customer =  result;\n      debugger;\n      this.updateForm.controls['CustomerId'].setValue(result.customerId); \n      this.updateForm.controls['CustomerNumber'].setValue(result.customerNumber); \n      this.updateForm.controls['CustomerName'].setValue(result.customerName);\n      this.updateForm.controls['Gender'].setValue(result.gender); \n      \n      //this.myDate = this.datePipe.transform(this.myDate, 'yyyy-MM-dd');\n      this.updateForm.controls['DateOfBirth'].setValue(this.datePipe.transform(result.dateOfBirth, 'yyyy-MM-dd')); \n      debugger;\n     });\n  }\n  updateEmp() {\n    debugger;\n    this.customerService.updateCustomer(this.updateForm.value);\n    this.router.navigate(['/customerlist']);\n  }\n\n\n  back() {\n    this.location.back();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}